{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ThemeService {\n  constructor() {\n    this.darkThemeClass = 'dark';\n    this.themeSubject = new BehaviorSubject(this.getCurrentTheme());\n    this.theme$ = this.themeSubject.asObservable();\n    // Initialize theme from localStorage or system preference\n    this.setTheme(this.getCurrentTheme());\n  }\n  getCurrentTheme() {\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      return savedTheme;\n    }\n    // Check system preference\n    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      return 'dark';\n    }\n    return 'light';\n  }\n  setTheme(theme) {\n    localStorage.setItem('theme', theme);\n    this.themeSubject.next(theme);\n    if (theme === 'dark') {\n      document.documentElement.classList.add(this.darkThemeClass);\n    } else {\n      document.documentElement.classList.remove(this.darkThemeClass);\n    }\n  }\n  toggleTheme() {\n    const currentTheme = this.themeSubject.value;\n    this.setTheme(currentTheme === 'light' ? 'dark' : 'light');\n  }\n  isDarkTheme() {\n    return this.themeSubject.value === 'dark';\n  }\n  static {\n    this.ɵfac = function ThemeService_Factory(t) {\n      return new (t || ThemeService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ThemeService,\n      factory: ThemeService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","ThemeService","constructor","darkThemeClass","themeSubject","getCurrentTheme","theme$","asObservable","setTheme","savedTheme","localStorage","getItem","window","matchMedia","matches","theme","setItem","next","document","documentElement","classList","add","remove","toggleTheme","currentTheme","value","isDarkTheme","factory","ɵfac","providedIn"],"sources":["D:\\Personal Projects\\project-bolt-sb1-jpivxa2j(july-updated)\\project\\src\\app\\core\\services\\theme\\theme.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport type Theme = 'light' | 'dark';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private darkThemeClass = 'dark';\n  private themeSubject = new BehaviorSubject<Theme>(this.getCurrentTheme());\n  public theme$ = this.themeSubject.asObservable();\n\n  constructor() {\n    // Initialize theme from localStorage or system preference\n    this.setTheme(this.getCurrentTheme());\n  }\n\n  private getCurrentTheme(): Theme {\n    const savedTheme = localStorage.getItem('theme') as Theme;\n    if (savedTheme) {\n      return savedTheme;\n    }\n    \n    // Check system preference\n    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      return 'dark';\n    }\n    \n    return 'light';\n  }\n\n  public setTheme(theme: Theme): void {\n    localStorage.setItem('theme', theme);\n    this.themeSubject.next(theme);\n    \n    if (theme === 'dark') {\n      document.documentElement.classList.add(this.darkThemeClass);\n    } else {\n      document.documentElement.classList.remove(this.darkThemeClass);\n    }\n  }\n\n  public toggleTheme(): void {\n    const currentTheme = this.themeSubject.value;\n    this.setTheme(currentTheme === 'light' ? 'dark' : 'light');\n  }\n\n  public isDarkTheme(): boolean {\n    return this.themeSubject.value === 'dark';\n  }\n}"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAOtC,OAAM,MAAOC,YAAY;EAKvBC,YAAA;IAJQ,KAAAC,cAAc,GAAG,MAAM;IACvB,KAAAC,YAAY,GAAG,IAAIJ,eAAe,CAAQ,IAAI,CAACK,eAAe,EAAE,CAAC;IAClE,KAAAC,MAAM,GAAG,IAAI,CAACF,YAAY,CAACG,YAAY,EAAE;IAG9C;IACA,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACH,eAAe,EAAE,CAAC;EACvC;EAEQA,eAAeA,CAAA;IACrB,MAAMI,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAU;IACzD,IAAIF,UAAU,EAAE;MACd,OAAOA,UAAU;;IAGnB;IACA,IAAIG,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,EAAE;MAC7D,OAAO,MAAM;;IAGf,OAAO,OAAO;EAChB;EAEON,QAAQA,CAACO,KAAY;IAC1BL,YAAY,CAACM,OAAO,CAAC,OAAO,EAAED,KAAK,CAAC;IACpC,IAAI,CAACX,YAAY,CAACa,IAAI,CAACF,KAAK,CAAC;IAE7B,IAAIA,KAAK,KAAK,MAAM,EAAE;MACpBG,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,IAAI,CAAClB,cAAc,CAAC;KAC5D,MAAM;MACLe,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,IAAI,CAACnB,cAAc,CAAC;;EAElE;EAEOoB,WAAWA,CAAA;IAChB,MAAMC,YAAY,GAAG,IAAI,CAACpB,YAAY,CAACqB,KAAK;IAC5C,IAAI,CAACjB,QAAQ,CAACgB,YAAY,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAC5D;EAEOE,WAAWA,CAAA;IAChB,OAAO,IAAI,CAACtB,YAAY,CAACqB,KAAK,KAAK,MAAM;EAC3C;;;uBA1CWxB,YAAY;IAAA;EAAA;;;aAAZA,YAAY;MAAA0B,OAAA,EAAZ1B,YAAY,CAAA2B,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}