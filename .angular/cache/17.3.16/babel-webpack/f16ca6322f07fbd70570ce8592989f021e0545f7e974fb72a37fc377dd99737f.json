{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nexport class TranslationsService {\n  constructor(translate) {\n    this.translate = translate;\n    this.currentLanguageSubject = new BehaviorSubject('en');\n    this.currentLanguage$ = this.currentLanguageSubject.asObservable();\n    const savedLang = localStorage.getItem('preferredLanguage');\n    const defaultLang = savedLang || 'en';\n    this.translate.setDefaultLang('en');\n    this.setLanguage(defaultLang);\n  }\n  setLanguage(lang) {\n    localStorage.setItem('preferredLanguage', lang);\n    this.translate.use(lang);\n    this.currentLanguageSubject.next(lang);\n    document.documentElement.lang = lang;\n    if (lang === 'bn') {\n      document.body.classList.add('bengali');\n    } else {\n      document.body.classList.remove('bengali');\n    }\n  }\n  toggleLanguage() {\n    const currentLang = this.currentLanguageSubject.value;\n    const newLang = currentLang === 'en' ? 'bn' : 'en';\n    this.setLanguage(newLang);\n  }\n  getCurrentLanguage() {\n    return this.currentLanguageSubject.value;\n  }\n  instant(key, params) {\n    return this.translate.instant(key, params);\n  }\n  static {\n    this.ɵfac = function TranslationsService_Factory(t) {\n      return new (t || TranslationsService)(i0.ɵɵinject(i1.TranslateService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TranslationsService,\n      factory: TranslationsService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","TranslationsService","constructor","translate","currentLanguageSubject","currentLanguage$","asObservable","savedLang","localStorage","getItem","defaultLang","setDefaultLang","setLanguage","lang","setItem","use","next","document","documentElement","body","classList","add","remove","toggleLanguage","currentLang","value","newLang","getCurrentLanguage","instant","key","params","i0","ɵɵinject","i1","TranslateService","factory","ɵfac","providedIn"],"sources":["D:\\Personal Projects\\project-bolt-sb1-jpivxa2j(july-updated)\\project\\src\\app\\core\\services\\i18n\\translations.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport type Language = 'en' | 'bn';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslationsService {\n  private currentLanguageSubject = new BehaviorSubject<Language>('en');\n  public currentLanguage$: Observable<Language> = this.currentLanguageSubject.asObservable();\n\n  constructor(private translate: TranslateService) {\n    const savedLang = localStorage.getItem('preferredLanguage') as Language;\n    const defaultLang = savedLang || 'en';\n    \n    this.translate.setDefaultLang('en');\n    this.setLanguage(defaultLang);\n  }\n\n  public setLanguage(lang: Language): void {\n    localStorage.setItem('preferredLanguage', lang);\n    this.translate.use(lang);\n    this.currentLanguageSubject.next(lang);\n    document.documentElement.lang = lang;\n    \n    if (lang === 'bn') {\n      document.body.classList.add('bengali');\n    } else {\n      document.body.classList.remove('bengali');\n    }\n  }\n\n  public toggleLanguage(): void {\n    const currentLang = this.currentLanguageSubject.value;\n    const newLang: Language = currentLang === 'en' ? 'bn' : 'en';\n    this.setLanguage(newLang);\n  }\n\n  public getCurrentLanguage(): Language {\n    return this.currentLanguageSubject.value;\n  }\n\n  public instant(key: string, params?: any): string {\n    return this.translate.instant(key, params);\n  }\n}"],"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;;;AAOlD,OAAM,MAAOC,mBAAmB;EAI9BC,YAAoBC,SAA2B;IAA3B,KAAAA,SAAS,GAATA,SAAS;IAHrB,KAAAC,sBAAsB,GAAG,IAAIJ,eAAe,CAAW,IAAI,CAAC;IAC7D,KAAAK,gBAAgB,GAAyB,IAAI,CAACD,sBAAsB,CAACE,YAAY,EAAE;IAGxF,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAa;IACvE,MAAMC,WAAW,GAAGH,SAAS,IAAI,IAAI;IAErC,IAAI,CAACJ,SAAS,CAACQ,cAAc,CAAC,IAAI,CAAC;IACnC,IAAI,CAACC,WAAW,CAACF,WAAW,CAAC;EAC/B;EAEOE,WAAWA,CAACC,IAAc;IAC/BL,YAAY,CAACM,OAAO,CAAC,mBAAmB,EAAED,IAAI,CAAC;IAC/C,IAAI,CAACV,SAAS,CAACY,GAAG,CAACF,IAAI,CAAC;IACxB,IAAI,CAACT,sBAAsB,CAACY,IAAI,CAACH,IAAI,CAAC;IACtCI,QAAQ,CAACC,eAAe,CAACL,IAAI,GAAGA,IAAI;IAEpC,IAAIA,IAAI,KAAK,IAAI,EAAE;MACjBI,QAAQ,CAACE,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;KACvC,MAAM;MACLJ,QAAQ,CAACE,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,SAAS,CAAC;;EAE7C;EAEOC,cAAcA,CAAA;IACnB,MAAMC,WAAW,GAAG,IAAI,CAACpB,sBAAsB,CAACqB,KAAK;IACrD,MAAMC,OAAO,GAAaF,WAAW,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI;IAC5D,IAAI,CAACZ,WAAW,CAACc,OAAO,CAAC;EAC3B;EAEOC,kBAAkBA,CAAA;IACvB,OAAO,IAAI,CAACvB,sBAAsB,CAACqB,KAAK;EAC1C;EAEOG,OAAOA,CAACC,GAAW,EAAEC,MAAY;IACtC,OAAO,IAAI,CAAC3B,SAAS,CAACyB,OAAO,CAACC,GAAG,EAAEC,MAAM,CAAC;EAC5C;;;uBArCW7B,mBAAmB,EAAA8B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,gBAAA;IAAA;EAAA;;;aAAnBjC,mBAAmB;MAAAkC,OAAA,EAAnBlC,mBAAmB,CAAAmC,IAAA;MAAAC,UAAA,EAFlB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}