{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n  }\n  getArtworks() {\n    return this.http.get('/assets/data/artworks.json');\n  }\n  getPhotos() {\n    return this.http.get('/assets/data/photos.json');\n  }\n  getTimeline() {\n    return this.http.get('/assets/data/timeline.json');\n  }\n  getWritings() {\n    return this.http.get('/assets/data/writings.json');\n  }\n  getInterviews() {\n    return this.http.get('/assets/data/interviews.json');\n  }\n  getPeople() {\n    return this.http.get('/assets/data/people.json');\n  }\n  getVideos() {\n    return this.http.get('/assets/data/videos.json');\n  }\n  static {\n    this.ɵfac = function DataService_Factory(t) {\n      return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DataService,\n      factory: DataService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["DataService","constructor","http","getArtworks","get","getPhotos","getTimeline","getWritings","getInterviews","getPeople","getVideos","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Personal Projects\\project-bolt-sb1-jpivxa2j(july-updated)\\project\\src\\app\\core\\services\\data\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  constructor(private http: HttpClient) {}\n\n  getArtworks(): Observable<any> {\n    return this.http.get('/assets/data/artworks.json');\n  }\n\n  getPhotos(): Observable<any> {\n    return this.http.get('/assets/data/photos.json');\n  }\n\n  getTimeline(): Observable<any> {\n    return this.http.get('/assets/data/timeline.json');\n  }\n\n  getWritings(): Observable<any> {\n    return this.http.get('/assets/data/writings.json');\n  }\n\n  getInterviews(): Observable<any> {\n    return this.http.get('/assets/data/interviews.json');\n  }\n\n  getPeople(): Observable<any> {\n    return this.http.get('/assets/data/people.json');\n  }\n\n  getVideos(): Observable<any> {\n    return this.http.get('/assets/data/videos.json');\n  }\n}"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,4BAA4B,CAAC;EACpD;EAEAC,SAASA,CAAA;IACP,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAC,0BAA0B,CAAC;EAClD;EAEAE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAC,4BAA4B,CAAC;EACpD;EAEAG,WAAWA,CAAA;IACT,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAC,4BAA4B,CAAC;EACpD;EAEAI,aAAaA,CAAA;IACX,OAAO,IAAI,CAACN,IAAI,CAACE,GAAG,CAAC,8BAA8B,CAAC;EACtD;EAEAK,SAASA,CAAA;IACP,OAAO,IAAI,CAACP,IAAI,CAACE,GAAG,CAAC,0BAA0B,CAAC;EAClD;EAEAM,SAASA,CAAA;IACP,OAAO,IAAI,CAACR,IAAI,CAACE,GAAG,CAAC,0BAA0B,CAAC;EAClD;;;uBA7BWJ,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXd,WAAW;MAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}